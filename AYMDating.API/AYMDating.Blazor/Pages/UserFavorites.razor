@page "/userFavorites"
@inherits Users

@using AYMDating.API.DTO
@using AYMDating.Blazor.Data.Helpers
@inject ApiServiceLogin _apiServiceLogin
@inject AppState _AppState

<PageTitle>User Favorites</PageTitle>


@if (_AppState.isAuthenticated)
{
    <div class="m-auto text-center">
        <h4>Members Added you in their Favorites</h4>
        <br />
    </div>

    @if (forecasts == null || CurrentUserFavorites == null)
    {
        <p><em>Loading...</em></p>
    }
    else @if (forecasts != null && CurrentUserFavorites.Count == 0)
    {
        <p><em>No Favorites</em></p>
    }
    else
    {
        <div class="container">
            <div class="row">

                @foreach (var forecast in forecasts.Where(a => CurrentUserFavorites.Any(b => b.SenderAppUserId == a.AppUserId)).OrderByDescending(a => CurrentUserFavorites.FirstOrDefault(b => b.SenderAppUserId == a.AppUserId)?.CreationDate))
                {
                    <div class="col-md-3 text-center p-2 fs-6">
                        <div class="border border-black rounded" @onclick="() => NavigateToUser(forecast.AppUser.UserName)">
                            <div class="p-1">
                                <img src="@GetImage(forecast.MainImage,(int)forecast.GenderId)" title="@forecast.AppUser.UserName" alt="Image" class="img-fluid rounded" />
                            </div>
                            <div>
                                @forecast.AppUser?.UserName |  <img src="@GetpackageImage((int)forecast.UserPackage.PackageId)" title="@forecast.UserPackage.Package.Name" class="img-fluid" style="max-width: 11%;" />

                            </div>
                            <div>
                                @forecast.Age | @forecast.Country?.Name | @forecast.City
                            </div>
                            <div>
                                Seeking: @GetGender((int)forecast.GenderId) @forecast.SearchAgeFrom - @forecast.SearchAgeTo
                            </div>
                            <div class="d-flex align-items-center justify-content-center">
                                I'm Online &ensp; <img src="@GetUserOnlineLogo(forecast.IsCurrentUserOnline)" alt="@GetAltText(forecast.IsCurrentUserOnline)" class="img-fluid" style="max-width: 7%;" /> &ensp; <img src=@GetUserVerifiedLogo(forecast.IsCurrentUserVerified) title="@(forecast.IsCurrentUserVerified?"Verified":"Unverified")" alt="Verified" class="img-fluid" style="max-width: 7%;" />
                            </div>
                            <div>
                                Joined Since:  @GetUserSinceDateOfJoin(forecast.AppUser.DateOfJoin)
                            </div>
                            <div>
                                Favorited Since:  @GetUserSinceDateOfJoin((DateTime)CurrentUserFavorites.FirstOrDefault(a => a.SenderAppUserId == forecast.AppUserId).CreationDate)
                            </div>
                        </div>

                        <div class="d-flex align-items-center justify-content-between p-3">
                            <img src="@GetUserIsLiked(forecast.IsLikedFromCurrentUser)" alt="Add Like" title="Add Like to this User" class="img-fluid" style="max-width: 20%;" @onclick="() => AddRemoveLike(forecast.AppUserId,forecast.IsLikedFromCurrentUser)" /> || <img src="@GetUserIsFavorite(forecast.IsFavoriteFromCurrentUser)" alt="Add Favorite" title="Add this User To Your Favorites" class="img-fluid" style="max-width: 20%;" @onclick="() => AddRemoveFavorite(forecast.AppUserId,forecast.IsFavoriteFromCurrentUser)" /> || <img src="css/Images/Default/message-icon.png" alt="Messaging" title="Message this User" class="img-fluid" style="max-width: 20%;" @onclick="() => GoToChatWith(forecast.AppUser.UserName, forecast.AppUserId)" /> || <img src="@GetUserIsBlocked(forecast.IsBlockedFromCurrentUser)" alt="Blocking" title="Block Or Unblock This User" class="img-fluid" style="max-width: 20%;" @onclick="() => AddRemoveBlocking(forecast.AppUserId,forecast.IsBlockedFromCurrentUser)" />
                        </div>

                    </div>
                }
            </div>
        </div>
    }
}
else
    UnAuthorizedUser();




@code {
    protected List<UserViewOrLikeOrFavoriteOrBlockOrReportDTO> CurrentUserFavorites;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // forecasts = await _apiServiceLogin.GetHistoryWithMainImagesForAll();
            forecasts = _AppState.AllUsers;
            CurrentUserFavorites = await _apiServiceLogin.GetCurrentUserFavorites();

        }
        catch (Exception ex)
        {
            GoToWrongArea();
        }
    }
    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        // if (firstRender)
        // {
        //     await Update_AppStateCurrentUser();
        //     StateHasChanged();
        // }
    }
}
