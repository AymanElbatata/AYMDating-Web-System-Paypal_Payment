@page "/resetPassword/{Email}/{Code?}"

@using AYMDating.API.DTO
@using AYMDating.Blazor.Data.Helpers
@using AYMDating.DAL.Entities
@using System.Net.Http.Headers
@using System.ComponentModel.DataAnnotations
@inject NavigationManager Navigation
@inject ApiServiceLogin _apiServiceLogin

<PageTitle>Reset Password</PageTitle>
@* <h3>Reset Password</h3>
 *@

<div class="container text-center d-flex align-content-center justify-content-center col-md-12">
    <EditForm Model="activationModel" OnValidSubmit="HandleActivation">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="text-center mb-1">
            <label for="Email">Email:</label>
            <InputText id="Email" @bind-Value="Email" type="email" />
        </div>
        <div class="text-center mb-1">
            <label for="Code">Code:</label>
            <InputText id="Code" @bind-Value="Code" type="text" />
        </div>
        <div class="text-center mb-1">
            <label for="activationModel.Password">Password:</label>
            <InputText id="activationModel.Password" @bind-Value="activationModel.Password" type="password" />
        </div>
        <div class="text-center mb-1">
            <label for="activationModel.ConfirmPassword">Confirm Password:</label>
            <InputText id="activationModel.ConfirmPassword" @bind-Value="activationModel.ConfirmPassword" type="password" />
        </div>
        <div class="text-center mb-1">
            <button class="btn btn-outline-dark" type="submit">Reset Password</button>
        </div>
    </EditForm>
</div>

@code {

    [Parameter]
    [Required]
    [EmailAddress]
    public string Email { get; set; }

    [Parameter]
    [MinLength(10)]
    [MaxLength(10)]
    public string Code { get; set; }


    private ForgotPasswordDTO activationModel = new ForgotPasswordDTO();

    private async Task HandleActivation()
    {
        try
        {
            activationModel.Code = Code;
            activationModel.Email = Email;
            bool ActivateUserIsDone = await _apiServiceLogin.ResetPasswordForUser(activationModel);
            if (ActivateUserIsDone)
            {
                Navigation.NavigateTo("/login/Congratulation, Your Password was changed!.");
            }
        }
        catch (Exception ex)
        {
            // Handle login failure (e.g., show an error message)
        }
    }

    protected override async Task OnInitializedAsync()
    {
        activationModel.Email = Email;
        activationModel.Code = Code;

    }


    protected async override Task OnAfterRenderAsync(bool firstRender)
    {

    }
}
